

/*
 * Sean Peters
 * 6/22/2022
 * Multiple BMP_180 pressure sensors implimented through the I2c bus with a multiplexer
*/
#include <Wire.h>
#include <Arduino.h>

#include <BMP180I2C.h>

#define LED 12
#define BMP180_ADDR 0x77 // 7-bit address
#define BMP180_REG_RESULT 0xF6
BMP180I2C bmp0(BMP180_ADDR);
BMP180I2C bmp1(BMP180_ADDR);
BMP180I2C bmp2(BMP180_ADDR);
//BMP180I2C bmp180(BMP180_ADDR);


void bmpSelect(uint16_t i)
{
  if (i > 3) 
    return;
    
  if (i == 0){
    digitalWrite(5, LOW); digitalWrite(6, LOW); digitalWrite(7, LOW);  // ==> 000 ==> 0
  }else   if (i == 1){
    digitalWrite(5, LOW); digitalWrite(6, LOW); digitalWrite(7, HIGH);  // ==> 001 ==> 1
  } else  if (i == 2){
    digitalWrite(5, LOW); digitalWrite(6, HIGH); digitalWrite(7, LOW);  // ==> 010 ==> 2
  }
  if (i == 0){
    digitalWrite(5, LOW); digitalWrite(6, LOW); digitalWrite(7, LOW);  // ==> 0
  }
  
    Wire.beginTransmission(0x70);
    Wire.write(1 << i);
    Wire.endTransmission();
  
}
void setup()
{
  Serial.begin(9600); 
  pinMode(LED, OUTPUT);
  Serial.println("REBOOT");
  
bmp0.resetToDefaults();
bmp0.setSamplingMode(BMP180MI::MODE_UHR);
}

void loop()
{
 delay(1000);

  digitalWrite(LED, LOW);
 
  char status;
 
   bmpSelect(0);
    if (bmp0.hasValue())
    {
      Wire.beginTransmission(BMP180_ADDR);
      Wire.write(BMP180_REG_RESULT);
      Serial.print("bmp0 absolute pressure: ");
      Serial.print(bmp0.getPressure());
      Serial.println(" Pa, ");
  
      static double pressureChange = bmp0.getPressure();
       Serial.print( "static: ");
      Serial.println(pressureChange);
     
      double dif = bmp0.getPressure();
      Serial.print( "dif: ");
      Serial.println(dif);
      if(dif > pressureChange + .5)
        digitalWrite(LED, HIGH);
        
      else if ( dif <= pressureChange + .2)
        digitalWrite(LED, LOW);
      
    }
    else 
      Serial.println("error retrieving pressure measurement\n");
  delay(1000);

  

   bmpSelect(1);
    if (bmp1.hasValue())
    {
      Serial.print("bmp1 absolute pressure: ");
      Serial.print(bmp1.getPressure());
      Serial.println(" Pa, ");
  
      static double pressureChange = bmp1.getPressure();
       Serial.print( "static: ");
      Serial.println(pressureChange);
     
      double dif = bmp1.getPressure();
      Serial.print( "dif: ");
      Serial.println(dif);
      if(dif > pressureChange + .5)
        digitalWrite(LED, HIGH);
        
      else if ( dif <= pressureChange + .2)
        digitalWrite(LED, LOW);
      
    }
    else 
      Serial.println("error retrieving pressure measurement\n");
  delay(1000);

  

   bmpSelect(2);
    if (!bmp2.hasValue())
    {
      Serial.print("bmp2 absolute pressure: ");
      Serial.print(bmp2.getPressure());
      Serial.println(" Pa, ");
  
      static double pressureChange = bmp2.getPressure();
       Serial.print( "static: ");
      Serial.println(pressureChange);
     
      double dif = bmp2.getPressure();
      Serial.print( "dif: ");
      Serial.println(dif);
      if(dif > pressureChange + .5)
        digitalWrite(LED, HIGH);
        
      else if ( dif <= pressureChange + .2)
        digitalWrite(LED, LOW);
      
    }
    else 
      Serial.println("error retrieving pressure measurement\n");
  delay(1000);

  }
